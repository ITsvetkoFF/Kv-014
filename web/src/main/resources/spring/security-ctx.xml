<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		                         http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="edu.softserve.zoo.web.security"/>

    <!-- Security properties -->
    <http create-session="stateless" entry-point-ref="errorHandler">
        <csrf disabled="true"/>
        <access-denied-handler ref="errorHandler"/>

        <custom-filter position="LOGOUT_FILTER" ref="logoutFilter"/>
        <custom-filter position="FORM_LOGIN_FILTER" ref="loginAuthFilter"/>
        <custom-filter position="REMEMBER_ME_FILTER" ref="tokenAuthFilter"/>

        <!-- Put the most specific matches at the top -->
        <intercept-url pattern="/api/v1/employees/**" method="GET" access="hasAnyRole('ROLE_MANAGER, ROLE_ADMIN')"/>
        <intercept-url pattern="/api/v1/employees/**" access="hasRole('ROLE_ADMIN')"/>

        <intercept-url pattern="/api/v1/login" access="permitAll"/>
        <intercept-url pattern="/api/v1/logout" access="permitAll"/>
        <intercept-url pattern="/api/v1/user" access="isAuthenticated()"/>

        <intercept-url pattern="/**" method="OPTIONS" access="permitAll"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>
    </http>

    <!-- Filter responsible for intercepting login requests -->
    <beans:bean id="loginAuthFilter" class="edu.softserve.zoo.web.security.LoginAuthFilter">
        <beans:property name="filterProcessesUrl" value="/api/v1/login"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="rememberMeServices" ref="jwtRememberMeServices"/>
        <beans:property name="authenticationSuccessHandler" ref="loginSuccessHandler"/>
        <beans:property name="authenticationFailureHandler" ref="errorHandler"/>
    </beans:bean>

    <!-- Filter responsible for intercepting logout requests -->
    <beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <beans:property name="filterProcessesUrl" value="/api/v1/logout"/>
        <beans:constructor-arg name="logoutSuccessHandler" ref="logoutSuccessHandler"/>
        <beans:constructor-arg name="handlers" ref="jwtRememberMeServices"/>
    </beans:bean>

    <beans:bean id="logoutSuccessHandler"
                class="org.springframework.security.web.authentication.logout.HttpStatusReturningLogoutSuccessHandler"/>

    <!-- Configuring main authentication manager -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsServiceImpl">
            <password-encoder ref="bcryptEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <!-- Getting security properties from config file -->
    <beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="location" value="classpath:security.properties"/>
    </beans:bean>
</beans:beans>